DROP SCHEMA IF EXISTS SaleManagement;
CREATE SCHEMA SaleManagement;

CREATE TABLE SaleManagement.Sales (
	saleCode INT(8)       NOT NULL,
	name     VARCHAR(20)  NULL,
	tel      VARCHAR(20)  NULL,
	addr     VARCHAR(100) NULL,
	sLeave   VARCHAR(10)  NULL,
	sLevel   VARCHAR(2)   NULL,
	id       VARCHAR(20)  NULL,
	pw       VARCHAR(20)  NULL
);

ALTER TABLE SaleManagement.Sales
	ADD CONSTRAINT PK_Sales
		PRIMARY KEY (
			saleCode
		);

CREATE TABLE SaleManagement.Account (
	accCode INT(8)       NOT NULL,
	name    VARCHAR(20)  NULL,
	tel     VARCHAR(20)  NULL,
	addr    VARCHAR(100) NULL,
	admit   VARCHAR(10)  NULL,
	alevel  VARCHAR(2)   NULL,
	COL     VARCHAR(20)  NULL,
	pw      VARCHAR(20)  NULL
);


ALTER TABLE SaleManagement.Account
	ADD CONSTRAINT PK_Account
		PRIMARY KEY (
			accCode
		);


CREATE TABLE SaleManagement.Product (
	pdtCode INT(4)      NOT NULL,
	class   INT(2)      NOT NULL,
	name    VARCHAR(20) NOT NULL,
	cost    INT(10)     NOT NULL,
	price   INT(10)     NOT NULL,
	admit   VARCHAR(10) NOT NULL,
	aCode   INT(8)      NOT NULL
);


ALTER TABLE SaleManagement.Product
	ADD CONSTRAINT PK_Product
		PRIMARY KEY (
			pdtCode
		);


CREATE TABLE SaleManagement.Record (
	recNo    INT(20) NOT NULL,
	pCode    INT(4)  NOT NULL,
	sCode    INT(8)  NOT NULL,
	date     DATE    NOT NULL,
	disprice INT(10) NOT NULL,
	disrate  INT(3)  NOT NULL,
	count    INT(10) NOT NULL
);


ALTER TABLE SaleManagement.Record
	ADD CONSTRAINT PK_Record
		PRIMARY KEY (
			recNo
		);


CREATE TABLE SaleManagement.AccountLevel (
	level   VARCHAR(2) NOT NULL,
	disrate INT(3)     NOT NULL
);


ALTER TABLE SaleManagement.AccountLevel
	ADD CONSTRAINT PK_AccountLevel
		PRIMARY KEY (
			level
		);


CREATE TABLE SaleManagement.bigClass (
	big  INT(2)      NOT NULL,
	name VARCHAR(10) NOT NULL
);


ALTER TABLE SaleManagement.bigClass
	ADD CONSTRAINT PK_bigClass
		PRIMARY KEY (
			big
		);


CREATE TABLE SaleManagement.smallClass (
	small INT(2)      NOT NULL,
	name  VARCHAR(10) NOT NULL,
	big   INT(2)      NOT NULL
);


ALTER TABLE SaleManagement.smallClass
	ADD CONSTRAINT PK_smallClass
		PRIMARY KEY (
			small
		);


CREATE TABLE SaleManagement.Addr (
	zipCode   CHAR(5)     NULL,
	sido      VARCHAR(20) NULL,
	sigungu   VARCHAR(20) NULL,
	doro      VARCHAR(20) NULL,
	building1 INT(5)      NULL,
	building2 INT(5)      NULL
);


CREATE TABLE SaleManagement.SalesLevel (
	level   VARCHAR(2) NOT NULL,
	disrate INT(3)     NOT NULL
);


ALTER TABLE SaleManagement.SalesLevel
	ADD CONSTRAINT PK_SalesLevel
		PRIMARY KEY (
			level
		);


ALTER TABLE SaleManagement.Sales
	ADD CONSTRAINT FK_SalesLevel_TO_Sales
		FOREIGN KEY (
			sLevel
		)
		REFERENCES SaleManagement.SalesLevel (
			level
		) on update cascade;


ALTER TABLE SaleManagement.Account
	ADD CONSTRAINT FK_AccountLevel_TO_Account
		FOREIGN KEY (
			alevel
		)
		REFERENCES SaleManagement.AccountLevel (
			level
		) on update cascade;


ALTER TABLE SaleManagement.Product
	ADD CONSTRAINT FK_smallClass_TO_Product
		FOREIGN KEY (
			class
		)
		REFERENCES SaleManagement.smallClass (
			small
		) on update cascade;


ALTER TABLE SaleManagement.Product
	ADD CONSTRAINT FK_Account_TO_Product
		FOREIGN KEY (
			aCode
		)
		REFERENCES SaleManagement.Account (
			accCode
		) on update cascade;


ALTER TABLE SaleManagement.Record
	ADD CONSTRAINT FK_Product_TO_Record
		FOREIGN KEY (
			pCode
		)
		REFERENCES SaleManagement.Product (
			pdtCode
		) on update cascade;


ALTER TABLE SaleManagement.Record
	ADD CONSTRAINT FK_Sales_TO_Record
		FOREIGN KEY (
			sCode
		)
		REFERENCES SaleManagement.Sales (
			saleCode
		) on update cascade;


ALTER TABLE SaleManagement.smallClass
	ADD CONSTRAINT FK_bigClass_TO_smallClass
		FOREIGN KEY (
			big
		)
		REFERENCES SaleManagement.bigClass (
			big
		)on update cascade;