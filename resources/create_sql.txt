DROP SCHEMA IF EXISTS SaleManagement;

CREATE SCHEMA SaleManagement;

CREATE TABLE SaleManagement.Sales (
	saleCode   INT(8)      NOT NULL,
	saleName   VARCHAR(20) NOT NULL,
	saleTel    VARCHAR(20) NULL,
	saleAddr   INT(8)      NOT NULL,
	saleLeave  BOOLEAN     NOT NULL DEFAULT true,
	saleId     VARCHAR(20) NOT NULL,
	salelevel VARCHAR(2)  NOT NULL
);

ALTER TABLE SaleManagement.Sales
	ADD CONSTRAINT PK_Sales
		PRIMARY KEY (
			saleCode
		);

CREATE TABLE SaleManagement.Account (
	accCode  INT(8)      NOT NULL,
	accName  VARCHAR(20) NOT NULL,
	accTel   VARCHAR(20) NULL,
	accAddr  INT(8)      NOT NULL,
	accAdmit BOOLEAN     NOT NULL DEFAULT false,
	accId    VARCHAR(20) NOT NULL,
	accLevel VARCHAR(1)  NULL
);

ALTER TABLE SaleManagement.Account
	ADD CONSTRAINT PK_Account
		PRIMARY KEY (
			accCode
		);

CREATE TABLE SaleManagement.Product (
	pdtCode  INT(4)      NOT NULL,
	pdtClass INT(2)      NOT NULL,
	pdtName  VARCHAR(20) NOT NULL,
	pdtCost  INT(10)     NOT NULL,
	pdtPrice INT(10)     NOT NULL,
	pdtAdmit BOOLEAN     NOT NULL DEFAULT false,
	accCode  INT(8)      NOT NULL
);

ALTER TABLE SaleManagement.Product
	ADD CONSTRAINT PK_Product
		PRIMARY KEY (
			pdtCode
		);

CREATE TABLE SaleManagement.Record (
	recNo       INT(20) NOT NULL,
	pdtCode     INT(4)  NOT NULL,
	saleCode    INT(8)  NOT NULL,
	pdtCost     INT(10) NOT NULL,
	pdtPrice    INT(10) NOT NULL,
	recDate     DATE    NOT NULL,
	recDisprice INT(10) NOT NULL,
	recDisrate  INT(3)  NOT NULL,
	recCount    INT(10) NOT NULL
);

ALTER TABLE SaleManagement.Record
	ADD CONSTRAINT PK_Record
		PRIMARY KEY (
			recNo
		);

CREATE TABLE SaleManagement.User (
	userId     VARCHAR(20) NOT NULL,
	userPw     VARCHAR(20) NOT NULL,
	categoryNo INT(2)      NOT NULL
);

ALTER TABLE SaleManagement.User
	ADD CONSTRAINT PK_User
		PRIMARY KEY (
			userId
		);

CREATE TABLE SaleManagement.AccountLevel (
	accLevel   VARCHAR(1) NOT NULL,
	accDisrate INT(3)     NOT NULL
);

ALTER TABLE SaleManagement.AccountLevel
	ADD CONSTRAINT PK_AccountLevel
		PRIMARY KEY (
			accLevel
		);

CREATE TABLE SaleManagement.bigClass (
	bigClass INT(2)      NOT NULL,
	bigName  VARCHAR(10) NOT NULL
);

ALTER TABLE SaleManagement.bigClass
	ADD CONSTRAINT PK_bigClass
		PRIMARY KEY (
			bigClass
		);

CREATE TABLE SaleManagement.rowClass (
	rowClass INT(2)      NOT NULL,
	rowName  VARCHAR(10) NOT NULL,
	bigClass INT(2)      NOT NULL
);

ALTER TABLE SaleManagement.rowClass
	ADD CONSTRAINT PK_rowClass
		PRIMARY KEY (
			rowClass
		);

CREATE TABLE SaleManagement.Addr (
	zipCode   CHAR(5)     NULL,
	sido      VARCHAR(20) NULL,
	sigungu   VARCHAR(20) NULL,
	doro      VARCHAR(20) NULL,
	building1 INT(5)      NULL,
	building2 INT(5)      NULL
);

CREATE TABLE SaleManagement.UserCategory (
	categoryNo   INT(2)      NOT NULL,
	categoryName VARCHAR(20) NOT NULL
);

ALTER TABLE SaleManagement.UserCategory
	ADD CONSTRAINT PK_UserCategory
		PRIMARY KEY (
			categoryNo
		);

CREATE TABLE SaleManagement.saleslevel (
	salelevel   VARCHAR(2) NOT NULL,
	saleDisrate INT(3)     NOT NULL
);

ALTER TABLE SaleManagement.saleslevel
	ADD CONSTRAINT PK_saleslevel
		PRIMARY KEY (
			salelevel
		);

CREATE TABLE SaleManagement.UserAddr (
	addrNo    INT(8)      NOT NULL,
	zipCode   CHAR(5)     NULL,
	sido      VARCHAR(20) NULL,
	sigungu   VARCHAR(20) NULL,
	doro      VARCHAR(20) NULL,
	building1 INT(5)      NULL,
	building2 INT(5)      NULL
);

ALTER TABLE SaleManagement.UserAddr
	ADD CONSTRAINT PK_UserAddr
		PRIMARY KEY (
			addrNo
		);

CREATE TABLE SaleManagement.SalesImg (
	saleCode INT(8)   NULL,
	saleImg LONGBLOB NULL
);

CREATE TABLE SaleManagement.ProductImg (
	pdtCode INT(4)   NULL,
	pdtImg  LONGBLOB NULL
);

ALTER TABLE SaleManagement.Sales
	ADD CONSTRAINT FK_User_TO_Sales
		FOREIGN KEY (
			saleId
		)
		REFERENCES SaleManagement.User (
			userId
		);

ALTER TABLE SaleManagement.Sales
	ADD CONSTRAINT FK_salelevel_TO_Sales
		FOREIGN KEY (
			salelevel
		)
		REFERENCES SaleManagement.saleslevel (
			salelevel
		);

ALTER TABLE SaleManagement.Sales
	ADD CONSTRAINT FK_UserAddr_TO_Sales
		FOREIGN KEY (
			saleAddr
		)
		REFERENCES SaleManagement.UserAddr (
			addrNo
		);

ALTER TABLE SaleManagement.Account
	ADD CONSTRAINT FK_User_TO_Account
		FOREIGN KEY (
			accId
		)
		REFERENCES SaleManagement.User (
			userId
		);

ALTER TABLE SaleManagement.Account
	ADD CONSTRAINT FK_AccountLevel_TO_Account
		FOREIGN KEY (
			accLevel
		)
		REFERENCES SaleManagement.AccountLevel (
			accLevel
		);

ALTER TABLE SaleManagement.Account
	ADD CONSTRAINT FK_UserAddr_TO_Account
		FOREIGN KEY (
			accAddr
		)
		REFERENCES SaleManagement.UserAddr (
			addrNo
		);

ALTER TABLE SaleManagement.Product
	ADD CONSTRAINT FK_rowClass_TO_Product
		FOREIGN KEY (
			pdtClass
		)
		REFERENCES SaleManagement.rowClass (
			rowClass
		);

ALTER TABLE SaleManagement.Product
	ADD CONSTRAINT FK_Account_TO_Product
		FOREIGN KEY (
			accCode
		)
		REFERENCES SaleManagement.Account (
			accCode
		);

ALTER TABLE SaleManagement.Record
	ADD CONSTRAINT FK_Product_TO_Record
		FOREIGN KEY (
			pdtCode
		)
		REFERENCES SaleManagement.Product (
			pdtCode
		);

ALTER TABLE SaleManagement.Record
	ADD CONSTRAINT FK_Sales_TO_Record
		FOREIGN KEY (
			saleCode
		)
		REFERENCES SaleManagement.Sales (
			saleCode
		);

ALTER TABLE SaleManagement.User
	ADD CONSTRAINT FK_UserCategory_TO_User
		FOREIGN KEY (
			categoryNo
		)
		REFERENCES SaleManagement.UserCategory (
			categoryNo
		);

ALTER TABLE SaleManagement.rowClass
	ADD CONSTRAINT FK_bigClass_TO_rowClass
		FOREIGN KEY (
			bigClass
		)
		REFERENCES SaleManagement.bigClass (
			bigClass
		);

ALTER TABLE SaleManagement.SalesImg
	ADD CONSTRAINT FK_Sales_TO_SalesImg
		FOREIGN KEY (
			saleCode
		)
		REFERENCES SaleManagement.Sales (
			saleCode
		);

ALTER TABLE SaleManagement.ProductImg
	ADD CONSTRAINT FK_Product_TO_ProductImg
		FOREIGN KEY (
			pdtCode
		)
		REFERENCES SaleManagement.Product (
			pdtCode
		);